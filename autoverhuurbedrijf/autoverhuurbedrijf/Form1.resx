<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>